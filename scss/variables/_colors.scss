@mixin generateHSLCustomProperties($name, $h, $s, $l) {
  --#{$name}-h: calc(#{$h} + var(--hue-shift));
  --#{$name}-s: #{$s};
  --#{$name}-l: #{$l};

  --#{$name}-hsl: var(--#{$name}-h), var(--#{$name}-s), var(--#{$name}-l);

  --#{$name}: hsl(var(--#{$name}-hsl));
}

@mixin generateHSLCustomPropertiesFromColor($color) {
  @include generateHSLCustomProperties(
    $color,
    hue($color),
    saturation($color),
    lightness($color),
  )
}

@mixin generateHSLCustomPropertiesFromHex($name, $color) {
  @include generateHSLCustomProperties(
    $name,
    hue($color),
    saturation($color),
    lightness($color),
  )
}

:root {
  --hue-shift: 0deg;

  // Generate individual hue, saturation, and lightness properties, as well as
  // full HSL and color props
  @include generateHSLCustomPropertiesFromColor(black);
  @include generateHSLCustomPropertiesFromColor(white);

  @include generateHSLCustomPropertiesFromHex(blue, #0092c7);
  @include generateHSLCustomPropertiesFromHex(dim-white, #b7b7b7);
  @include generateHSLCustomPropertiesFromHex(dark-grey, #1a1a1a);

  @include generateHSLCustomPropertiesFromHex(text-color, #1a1a1a);
  @include generateHSLCustomPropertiesFromHex(inverted-text-color, #ffffff);
  @include generateHSLCustomPropertiesFromHex(background-color, #ffffff);
  @include generateHSLCustomPropertiesFromHex(brand-primary, #0092c7);

  --transparent: transparent;
}
